name: Keyreply Next Build

on:
  workflow_dispatch:
  push:
    # branches:
    #   - dev
    tags:
      - '*'

env:
  KEYREPLY_REGISTRY_URL: 'keyreplyai.azurecr.io'
  IMAGE_REPOSITORY: 'keyreply/next'
  CACHE_FROM: type=registry,ref=keyreplyai.azurecr.io/keyreply/next:buildcache
  CACHE_TO: type=registry,ref=keyreplyai.azurecr.io/keyreply/next:buildcache,mode=max

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Update version and tag
        id: set_tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          else
            BRANCH_NAME=${GITHUB_REF_NAME}
            if [[ $BRANCH_NAME == */* ]]; then
              BRANCH_NAME=${BRANCH_NAME##*/}
            fi
            TAG=${BRANCH_NAME}.snapshot.${GITHUB_RUN_NUMBER}
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "::notice::Building image $KEYREPLY_REGISTRY_URL/$IMAGE_REPOSITORY:$TAG"

      - name: Login to KeyReply AI Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.KEYREPLY_REGISTRY_URL }}
          username: ${{ secrets.KEYREPLY_REGISTRY_USERNAME }}
          password: ${{ secrets.KEYREPLY_REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.KEYREPLY_REGISTRY_URL }}/${{ env.IMAGE_REPOSITORY }}:${{ steps.set_tag.outputs.tag }}
          build-args: |
            NUXT_UI_PRO_LICENSE=${{ secrets.NUXT_UI_PRO_LICENSE }}
            COMMIT_ID=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
